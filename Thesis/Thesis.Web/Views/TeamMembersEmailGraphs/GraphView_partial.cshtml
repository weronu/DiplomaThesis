@{
    Layout = null;
}

<style type="text/css">
    body { font-family: Arial; font-size: 10pt; }
    #dialog { height: 600px; overflow: auto; font-size: 10pt !important; font-weight: normal !important; background-color: #FFFFC1; margin: 10px; border: 1px solid #ff6a00; }
    #dialog div { margin-bottom: 15px; }
</style>

@model Thesis.Web.Models.GraphViewModel
<div class="graph-network" id="mynetwork"></div>
<div class="container-buttons">
    <div class="row">
        <div class="col-sm-3">
            <button id="findCommunitiesButton" type="button" class="btn btn-light">Find communities</button>
        </div>
        <div class="col-sm-3">
            <button id="createEgoNetworkButon" type="button" class="btn btn-light">Create Ego Network</button>
        </div>
        <div class="col-sm-3">
            <button id="findRolesButton" type="button" class="btn btn-light">Find Roles</button>
        </div>
    </div>
</div>
<div id="dialog" style="display: none"></div>

<script type="text/javascript">
    $(document).ready(function() {
        GraphVis();

        var findCommunittiesButton = $("#findCommunitiesButton");
        var createEgoNetworkButon = $("#createEgoNetworkButon");
        var findRolesButton = $("#findRolesButton");

        //Attach event handler to submit button
        findCommunittiesButton.click(function (e) {
            e.preventDefault();
            findCommunities();
            return false;
        });

        createEgoNetworkButon.click(function (e) {
            e.preventDefault();
            createEgoNetwork();
            return false;
        });

        findRolesButton.click(function (e) {
            e.preventDefault();
            findRoles();
            return false;
        });
    });

    function createEgoNetwork() {

        $.ajax({
            url: "@Url.Action("CreateEgoNetwork", "TeamMembersEmailGraphs")",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(@Html.Raw(Json.Encode(@Model))),
            error: OnError,
            success: function (partialView) {
                $('#graphView_Partial_Id').html(partialView);
            }
        });
    }

    function findCommunities() {
        $.ajax({
            url: "@Url.Action("FindCommunities", "TeamMembersEmailGraphs")",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(@Html.Raw(Json.Encode(@Model))),
            error: OnError,
            success: function (partialView) {
                $('#graphView_Partial_Id').html(partialView);
            }
        });
    }

    function findRoles() {
        $.ajax({
            url: "@Url.Action("FindRoles", "TeamMembersEmailGraphs")",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(@Html.Raw(Json.Encode(@Model))),
            datatype: 'json',
            error: OnError,
            success: function (partialView) {
                $('#graphView_Partial_Id').html(partialView);
            }
        });
    }

    function GraphVis() {
        //blockUI();
        var nodes = @Html.Raw(Json.Encode(Model.GraphDto.nodes));
        var edges = @Html.Raw(Json.Encode(Model.GraphDto.edges));

        // create a network
        var container = document.getElementById('mynetwork');

        // provide the data in the vis format
        var data = {
            nodes: nodes,
            edges: edges
        };
        var options = {
            nodes: {
                shape: 'dot',
                size: 10,
                borderWidth: 1
            },

            interaction: { hover: false }
        };
        // initialize your network!
        var network = new vis.Network(container, data, options);

        //unblockUI();
    }
</script>

