@{
    Layout = null;
}

@model Thesis.Web.Models.GraphViewModel

<div class="graph-network" id="mynetwork"></div>
<pre id="eventSpan"></pre>
<div class="container-buttons">
    <div class="row">
        <div class="col-sm-3">
            <button id="findCommunitiesButton" type="button" class="btn btn-light">Find communities</button>
        </div>
        <div class="col-sm-3">
            <button id="createEgoNetworkButon" type="button" class="btn btn-light">Create Ego Network</button>
        </div>
        <div class="col-sm-3">
            <button id="findRolesButton" type="button" class="btn btn-light">Find Roles</button>
        </div>
    </div>
</div>
<div id="dialog" class="dialog" style="display: none"></div>

<script type="text/javascript">
    blockUI();
    $(document).ready(function() {
        GraphVis();

        var findCommunittiesButton = $("#findCommunitiesButton");
        var createEgoNetworkButon = $("#createEgoNetworkButon");
        var findRolesButton = $("#findRolesButton");

        //Attach event handler to submit button
        findCommunittiesButton.click(function (e) {
            e.preventDefault();
            findCommunities();
            return false;
        });

        createEgoNetworkButon.click(function (e) {
            e.preventDefault();
            createEgoNetwork();
            return false;
        });

        findRolesButton.click(function (e) {
            e.preventDefault();
            findRoles();
            return false;
        });

        unblockUI();
    });

    function createEgoNetwork() {
        blockUI();
        $.ajax({
            url: "@Url.Action("CreateEgoNetwork", "TeamMembersEmailGraphs")",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(@Html.Raw(Json.Encode(@Model))),
            error: OnError,
            success: function (partialView) {
                $('#graphView_Partial_Id').html(partialView);
                unblockUI();
            }
        });
    }

    function findCommunities() {
        blockUI();
        $.ajax({
            url: "@Url.Action("FindCommunities", "TeamMembersEmailGraphs")",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(@Html.Raw(Json.Encode(@Model))),
            error: OnError,
            success: function (partialView) {
                $('#graphView_Partial_Id').html(partialView);
                unblockUI();
            }
        });
    }

    function findRoles() {
        blockUI();
        $.ajax({
            url: "@Url.Action("FindRoles", "TeamMembersEmailGraphs")",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(@Html.Raw(Json.Encode(@Model))),
            datatype: 'json',
            success: function (partialView) {
                $('#graphView_Partial_Id').html(partialView);
                unblockUI();
            }
        });
    }

    function GraphVis() {
        var nodes = @Html.Raw(Json.Encode(Model.GraphDto.nodes));
        var edges = @Html.Raw(Json.Encode(Model.GraphDto.edges));

        // create a network
        var container = document.getElementById('mynetwork');

        // provide the data in the vis format
        var data = {
            nodes: nodes,
            edges: edges
        };
        var options = {
            nodes: {
                shape: 'dot',
                size: 10,
                borderWidth: 1
            },
            interaction: { hover: true },
            layout: {
                improvedLayout: false
            }
            //,physics: {
            //    stabilization: {
            //        enabled: true,
            //        iterations: 1000
            //    }
            //}
    };
    // initialize your network!
    var network = new vis.Network(container, data, options);

    }
</script>

